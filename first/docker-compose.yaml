version: '3'

services:

  api.getway:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - api.user.0
      - api.user.1
      - api.user.2
      - api.laravel
      - front.admin
      - front.public
      - websocket.sunny

  front.public:
    build: ./frontend/public
    command: sh -c " npm install && npm start "
    volumes:
      - ./frontend/public/src:/usr/src/app

  front.admin:
    build: ./frontend/admin
    command: sh -c " npm install && npm start "
    volumes:
      - ./frontend/admin/src:/usr/src/app

  api.laravel:
    build: ./backend/laravel

  api.user.0:
    build: ./backend/user
    # Этот метод удобен для режима разработки
    # когда речь будет идти о публикции приложения
    # эти команды нужно запускать в Dockerfile
    command: sh -c " npm install && npm start "
    environment:
      - SERVER_NAME="Api Jonny"
    # режим подключения диска так же используется только в режиме разработки
    # он не подходит для публикации приложения на сервер (в облако)
    volumes:
      - ./backend/user/src:/usr/src/app

  api.user.1:
    build: ./backend/user
    command: sh -c " npm install && npm start "
    volumes:
      - ./backend/user/src:/usr/src/app
    environment:
      - SERVER_NAME="Api Sunny"

  api.user.2:
    build: ./backend/user
    command: sh -c " npm install && npm start "
    volumes:
      - ./backend/user/src:/usr/src/app
    environment:
      - SERVER_NAME="Api Funny"

  websocket.sunny:
    build: ./notifications/websocket
    command: sh -c " npm install && npm start "
    volumes:
      - ./notifications/websocket/src:/usr/src/app

  # Адаптер для сокет соединений
  websocket.redis:
    image: redis:alpine


  db.phpmyadmin:
    image: phpmyadmin
    # Для доступа к приложению
    ports:
      - 8080:80
    env_file:
      - ./.env

  db.mysql:
    image: mysql/mysql-server:latest
    # Если мне нужно, что бы при пересоздании контейнера база сохранялась - монтирую диск
    volumes:
      - ./volumes/db/mysql:/var/lib/mysql
    # Если есть необходимость предоставить доступ снаружи
    ports:
      - 3306:3306
    env_file:
      - ./.env

